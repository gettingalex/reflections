Q-What happens when you initialize a repository? Why do you need to do it?

A-It creates the .git files that keep tracks of the documents within the files and any commits made to it


Q-How is the staging area different from the working directory and the repository? What value do you think it offers?

A-The staging area is the area between the working directory and the repository. It allows the user to clearly define what files that are on the working directory, the git repository should follow


Q-How can you use the staging area to make sure you have one commit per logical change?

A-You can make sure you only add the file(s) related to that logical change to the staging area before commit. Then add the file(s) related to the other logical change to the staging area on their own and commit them afterwards


Q-What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A-For testing new code or creating new versions of a project that are not or may not be part of the master branch. 


Q-How do the diagrams help you visualize the branch structure?

A-They are allow me to see how each commit or branch is connected to the rest of the respository and I could only hope there is a way to visualize my repository the same you via a command or a third party program


Q-What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A-The merge creates a new joint branch that combines the commit of both branches into one


Q-What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

A-There is a risk of git not merging the code the way you want to and you must make sure to updated the secondary branches if master is updated










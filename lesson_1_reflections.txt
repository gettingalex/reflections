Q-How did viewing a diff between two versions of a file help you see the bug that was introduced?

A-I am able to see where the change were made between two versions and therefore, narrow down the area where the bug(s) is between the versions.


Q-How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

A-First, we can return to an old version if there is an issue with the new version or if we want to restore an old feature. Second, We cam keep track of who did what on the files.


Q-What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

A-Pros: more control, task specific commits, possibility of adding notes to each commit. Con: not similar size commit, risk of gargantuan commits and risk of losing all progress.


Q-Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately? 

A-Since Git is focus on coders, it makes senses that it would be project base and interconnected. As for others, like Google Docs, they focus on ease of use with single format document not interconnected such as doc and xls


Q-How can you use the commands git log and git diff to view the history of files?

A-They can be used to identify the commit(s) you want to inspect (log) and see which line(s) were added or removed.


Q-How might using version control make you more confident to make changes that could break something?

A-Using a VCS makes it easier to revert to an older version. Therefore, less fearful of breaking the code permanently


Q-Now that you have your workspace set up, what do you want to try using Git for?

A-Searching for errors, opening older versions of a file, overview of the changes to a file with the commits notes and preventing lost of data

